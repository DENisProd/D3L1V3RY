// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  email        String         @unique
  gender       GenderType?
  password     String
  name         String         @default("")
  birthday     DateTime?    
  blocked      Boolean        @default(false)
  role         UserRole     @default(DEFAULT)
}

enum GenderType {
  MALE
  FEMALE
}

enum UserRole {
  DEFAULT
  ADMIN
}

model File {
  id               Int            @id @default(autoincrement())
  url              String
  size             Int            @default(1)
  type             FileType
  isPublic         Boolean        @default(false)
}

enum FileType {
  PHOTO
  VIDEO
  DOCUMENT
}

model Product {
  id                 Int            @id @default(autoincrement())
  product_name       String
  product_cost       Float          @default(0)
  manufacture_date   DateTime
  expiry_date        DateTime
  sku                Int

  sales              Sale[]
  manufacturerId     Int
  manufacturer       Manufacturer        @relation(fields: [manufacturerId], references: [id], onDelete: Cascade)
  product_amount     ProductAmount[]
  product_delivery   ProductDelivery[]
}

model Sale {
  id               Int            @id @default(autoincrement())
  sale_date        DateTime?
  quantity_sold    Int            
  product_amount   Float          @default(0)
  product_measure  String
  product_volume   Float

  productId        Int            
  product          Product          @relation(fields: [productId], references: [id], onDelete: Cascade)
  storeId            Int            
  store              Store          @relation(fields: [storeId], references: [id], onDelete: Cascade)
}

model Manufacturer {
  id                    Int            @id @default(autoincrement())
  manufacturer_name     String
  manufacturer_address  String
  product          Product[]
}

model ProductAmount {
  id               Int            @id @default(autoincrement())
  productId        Int            
  product          Product          @relation(fields: [productId], references: [id], onDelete: Cascade)
  storeId          Int            
  store            Store          @relation(fields: [storeId], references: [id], onDelete: Cascade)
  amount           Int
}

model ProductDelivery {
  id                    Int            @id @default(autoincrement())
  productId        Int            
  product          Product          @relation(fields: [productId], references: [id], onDelete: Cascade)
  storeId          Int            
  store            Store          @relation(fields: [storeId], references: [id], onDelete: Cascade)
  amount           Int
  weight           Int
  status           ProductDeliveryStatus @default(IN_PROGRESS)
}

model Car {
  id                    Int            @id @default(autoincrement())
  type                  CarTypes
  capacity              Int
  number                String         @unique
  model                 String
}

enum CarTypes {
  SMALL
  MIDDLE
  HEAVY
}

enum ProductDeliveryStatus {
  COMPLETE
  IN_PROGRESS
  ORDER
}

model Coordinate {
  id               Int            @id @default(autoincrement())
  lon              Float          @default(0)
  lat              Float          @default(0)
  storeId          Int            @unique       
  store            Store          @relation(fields: [storeId], references: [id], onDelete: Cascade)
}

// lon: 39.71715376386022,
// lat: 47.282980074452155

model Store {
  id               Int            @id @default(autoincrement())
  store_name       String
  store_address    String
  region           String
  store_type       StoreType      @default(STORE) 
  coordinates      Coordinate?
  sales            Sale[]
  product_amount   ProductAmount[]
  product_delivery ProductDelivery[]
}

model Region {
  id               Int            @id @default(autoincrement())
  name             String
}

enum StoreType {
  SHOP
  STORE
}

model DistanceMatrix {
  id               Int            @id @default(autoincrement())
  storeId1         Int
  storeId2         Int
  distance         Int
}

model TimeMatrix {
  id               Int            @id @default(autoincrement())
  storeId1         Int
  storeId2         Int
  time             Int
}